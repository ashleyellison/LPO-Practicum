------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/doylewr/practicum/fall_2016/central/lessons/sampling/sampling_part1.lo
> g
  log type:  text
 opened on:  11 Oct 2016, 11:29:06

. 
. // NAME: Sampling: Part 1
. // FILE: lecture7_sampling_part1.do
. // AUTH: Will Doyle
. // REVS: Benjamin Skinner
. // INIT: 1 October 2014
. // LAST: 10 October 2016
.      
. clear all                               // clear memory

. set more off                            // turn off annoying "__more__" feature

. 
. global datadir "./"

. 
. // install gsample and moremata for probability samples
. // ssc install gsample
. // ssc install moremata
. 
. // SIMPLE RANDOM SAMPLING
. 
. // read in fake SAT score data
. use ${datadir}fakesat, clear

. 
. 
. // calculate population mean, variance, sd, and sem by hand
. egen scoretot = total(score)            // total of all scores

. scalar popmean = scoretot / _N          // population mean score

. gen sqdiff = (score - popmean)^2        // (Xi - Xbar)^2

. egen sst = total(sqdiff)                // total of squared differences

. scalar popvar = sst / (_N - 1)          // population variance (not super pop)

. scalar popsd = sqrt(popvar)             // population standard deviation

. scalar popsem = popsd / sqrt(_N)        // standard error of population mean

. 
. // compare to stata internal calculation
. scalar list popmean popsd popsem
   popmean =  499.87537
     popsd =  99.859033
    popsem =  .08153456

. summarize score

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
       score |   1500000    499.8754    99.85903        200        800

. mean score

Mean estimation                     Number of obs    = 1500000

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
       score |   499.8754   .0815346      499.7155    500.0352
--------------------------------------------------------------

. 
. // drop everything but score
. keep score

. 
. // randomly sample 10%, all with equal probability of selection
. sample 10
(1350000 observations deleted)

. 
. // calculate sample mean, variance, sd, and sem by hand
. egen scoretot = total(score)            // total of all scores

. scalar sampmean = scoretot / _N         // sample mean score

. gen sqdiff = (score - sampmean)^2       // (Xi - Xbar)^2

. egen sst = total(sqdiff)                // total of squared differences

. scalar sampvar = sst / (_N - 1)         // sample variance

. scalar sampsd = sqrt(sampvar)           // sample standard deviation

. scalar sampsem = sampsd / sqrt(_N)      // standard error of sample mean

. 
. // compare to stata internal calculation of sample
. scalar list sampmean sampsd sampsem
  sampmean =  499.67707
    sampsd =  99.786156
   sampsem =  .25764675

. summarize score

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
       score |    150000    499.6771    99.78616        200        800

. mean score

Mean estimation                     Number of obs    =  150000

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
       score |   499.6771   .2576467      499.1721     500.182
--------------------------------------------------------------

. 
. 
. // SIMPLE RANDOM SAMPLING WITH FINITE POPULATION CORRECTION
. 
. // read in data for single class test 
. use ${datadir}singleclasstest, clear

. 
. // check population stats; store population number
. sum score

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
       score |        50    80.02087    5.986087   64.91638   93.89526

. scalar N = _N

. 
. // sample large part of population
. sample 30, count
(20 observations deleted)

. scalar n = _N

. 
. // calculate sample stats without fpc correction
. egen scoretot = total(score)            // total of all scores

. scalar xbar = scoretot / n              // sample mean score

. gen sqdiff = (score - xbar)^2           // (Xi - Xbar)^2

. egen sst = total(sqdiff)                // total of squared differences

. scalar var_x = sst / (n - 1)            // sample variance

. scalar sd_x = sqrt(var_x)               // sample standard deviation

. scalar sampsem = sd_x / sqrt(n)         // standard error of sample mean

. 
. scalar list xbar var_x sd_x sampsem
      xbar =  80.139437
     var_x =  41.645424
      sd_x =  6.4533266
   sampsem =  1.1782108

. 
. // calculate fpc
. scalar fpc = sqrt((N - n) / (N - 1))

. 
. // correct sem with fpc
. scalar sampsemfpc = sampsem * fpc

. scalar list sampsem sampsemfpc
   sampsem =  1.1782108
sampsemfpc =   .7527313

. 
. // 95% CI for the mean
. di xbar - invnormal(.975) * sampsem
77.830186

. di xbar + invnormal(.975) * sampsem
82.448688

. 
. // 95% CI for fpc-adjusted mean
. di xbar - invnormal(.975) * sampsemfpc
78.664111

. di xbar + invnormal(.975) * sampsemfpc
81.614763

. 
. 
. // SIMPLE RANDOM SAMPLING WITH FREQUENCY WEIGHTS
. 
. use ${datadir}fakesat_freq, clear

. 
. // list first few observations
. list if _n < 11

     +--------------+
     | score   freq |
     |--------------|
  1. |   200   2412 |
  2. |   210    908 |
  3. |   220   1213 |
  4. |   230   1539 |
  5. |   240   2045 |
     |--------------|
  6. |   250   2725 |
  7. |   260   3313 |
  8. |   270   4305 |
  9. |   280   5393 |
 10. |   290   6621 |
     +--------------+

. 
. 
. // compare simple mean with freqency-weighted mean
. mean score

Mean estimation                     Number of obs    =      61

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
       score |        500    22.7303      454.5326    545.4674
--------------------------------------------------------------

. mean score [fw = freq]

Mean estimation                     Number of obs    = 1500000

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
       score |   499.8754   .0815346      499.7155    500.0352
--------------------------------------------------------------

. 
. // SIMPLE RANDOM SAMPLING WITH (INVERSE) PROBABILITY WEIGHTS
. 
. use ${datadir}fakesat, clear

. 
. // assume probability of reporting score is corrected with score
. gen preport = score / 1000 + .1 * (score / 10000)^2 + rnormal(0, .025)

. 
. // sample based on probability of reporting
. gsample 1 [w = preport], percent
(77 observations created)
(1485077 observations deleted)

. 
. // mean of sample
. mean score

Mean estimation                     Number of obs    =   15000

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
       score |   519.1793   .7937115      517.6236    520.7351
--------------------------------------------------------------

. 
. // generate pweight (inverse probability of selection)
. gen pweight = 1 / preport

. 
. // check probability-weighted mean 
. mean score [pweight = pweight]

Mean estimation                     Number of obs    =   15000

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
       score |   499.4138   .8699881      497.7085     501.119
--------------------------------------------------------------

. 
. // STRATIFIED RANDOM SAMPLING WITH PROBABILITY PROPORTIONAL TO SIZE
. 
. // read in fake highschool data; store full student population
. insheet using ${datadir}fakehs.csv, clear
(8 vars, 2003 obs)

. scalar stupop = _N

. 
. // proportion of students at risk
. mean atrisk                             // overall

Mean estimation                     Number of obs    =    2003

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
      atrisk |    .337993   .0105719      .3172599    .3587261
--------------------------------------------------------------

. mean atrisk, over(grade)                // within each grade

Mean estimation                     Number of obs    =    2003

            9: grade = 9
           10: grade = 10
           11: grade = 11
           12: grade = 12

--------------------------------------------------------------
        Over |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
atrisk       |
           9 |   .3252336   .0202723      .2854766    .3649907
          10 |   .3089431   .0208524      .2680485    .3498377
          11 |   .3677932   .0215218      .3255857    .4100008
          12 |   .3509514    .021968      .3078688     .394034
--------------------------------------------------------------

. 
. // sample within grades (strata)                               
. global ss = 50                          // set within grade sample size

. sample $ss, count by(grade)             // sample
(1803 observations deleted)

. 
. 
. 
. // compute within grade and overall means and sems
. preserve 

. collapse (mean) propatr = atrisk (sd) sdatr = atrisk (first) nstgrade, by(grade)

. 
. 
. scalar Ybar9 = propatr[1]               // 9th grade average

. scalar Ybar10 = propatr[2]              // 10th grade average

. scalar Ybar11 = propatr[3]              // 11th grade average

. scalar Ybar12 = propatr[4]              // 12th grade average

. 
. // compute ((N_h - n_h) / N_h - 1) * (s_h^2 / n_h)
. gen varatr = ((nstgrade - $ss) / (nstgrade - 1)) * (sdatr^2 / $ss)

. 
. // compute sem for each grade and store
. gen grade_sem = sqrt(varatr)

. 
. scalar Ybar9_sem = grade_sem[1]         // 9th grade sem

. scalar Ybar10_sem = grade_sem[2]        // 10th grade sem

. scalar Ybar11_sem = grade_sem[3]        // 11th grade sem

. scalar Ybar12_sem = grade_sem[4]        // 12th grade sem

. 
. gen weight = nstgrade / stupop          // (N_h / N)

. 
. gen wpropatr = weight * propatr         // weight strata proportions

. gen wvaratr = weight^2 * varatr         // weight strata variances

. 
. collapse (sum) wpropatr wvaratr         // sum within stata means and vars

. scalar Ybar = wpropatr[1]               // store estimate of pop. at risk

. scalar Ybar_sem = sqrt(wvaratr[1])      // compute root of above measure

. restore

. 
. // compare computed to Stata version
. scalar list Ybar Ybar_sem
      Ybar =  .27179231
  Ybar_sem =  .02966507

. mean atrisk

Mean estimation                     Number of obs    =     200

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
      atrisk |        .27   .0314715      .2079397    .3320603
--------------------------------------------------------------

. scalar list Ybar9 Ybar9_sem Ybar10 Ybar10_sem Ybar11 Ybar11_sem Ybar12 Ybar12_sem 
     Ybar9 =        .34
 Ybar9_sem =  .06449316
    Ybar10 =        .12
Ybar10_sem =  .04404578
    Ybar11 =        .34
Ybar11_sem =  .06428514
    Ybar12 =        .28
Ybar12_sem =  .06072205

. mean atrisk, over(grade)

Mean estimation                     Number of obs    =     200

            9: grade = 9
           10: grade = 10
           11: grade = 11
           12: grade = 12

--------------------------------------------------------------
        Over |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
atrisk       |
           9 |        .34   .0676727      .2065524    .4734476
          10 |        .12   .0464231      .0284557    .2115443
          11 |        .34   .0676727      .2065524    .4734476
          12 |        .28   .0641427      .1535134    .4064866
--------------------------------------------------------------

. 
. 
. // CLUSTER SAMPLING WITH PROBABILITY PROPORTIONAL TO SIZE
. 
. // open full fake highschool data again
. insheet using ${datadir}fakehs.csv, clear
(8 vars, 2003 obs)

. 
. // get population estimates
. mean testscore                          // overall

Mean estimation                     Number of obs    =    2003

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
   testscore |   509.0789   1.210999      506.7039    511.4538
--------------------------------------------------------------

. mean testscore, over(grade)             // within grade

Mean estimation                     Number of obs    =    2003

            9: grade = 9
           10: grade = 10
           11: grade = 11
           12: grade = 12

--------------------------------------------------------------
        Over |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
testscore    |
           9 |   480.3551   2.132872      476.1723     484.538
          10 |   503.9045    2.26261      499.4672    508.3418
          11 |   515.5706   2.193136      511.2695    519.8716
          12 |   540.0465   2.318895      535.4988    544.5942
--------------------------------------------------------------

. 
. // stratified sample
. global cut = 10                         // number of classes to keep in each grade 

. keep if classid <= $cut                 // keep only sampled classes
(1131 observations deleted)

. scalar m = _N                           // number of students in sample

. 
. 
. // get estimated population (should be close to 2003)
. gen weight = nclgrade / $cut            // 1 / (n_h / N_h) or just (N_h / n_h) 

. qui sum weight                          // quietly -summarize-

. scalar Mhat = r(sum)                    // store sum of weights

. di Mhat                                 // estimated population
1963

. 
. 
. // get population score estimate, by class and overall
. preserve

. gen wscore = testscore * weight         // (w_hij * y_hij)

. 
. // same as double sum: students to class, class to grade
. collapse (sum) wscore (first) nstgrade nclgrade, by(grade) 

. gen Ybar_grade = wscore / nstgrade      // Ytotal_h / stupop_h = Ybar_h

. scalar Ybar9 = Ybar_grade[1]            // 9th grade average score

. scalar Ybar10 = Ybar_grade[2]           // 10th grade average score

. scalar Ybar11 = Ybar_grade[3]           // 11th grade average score

. scalar Ybar12 = Ybar_grade[4]           // 12th grade average score

. qui sum wscore                          // quietly -summarize-

. scalar Ybar_school = r(sum) / Mhat      // Ytotal / stupop = Ybar

. restore

. 
. scalar list Ybar9 Ybar10 Ybar11 Ybar12 Ybar_school
     Ybar9 =  475.31216
    Ybar10 =  489.36139
    Ybar11 =  521.64276
    Ybar12 =  515.93848
Ybar_school =  510.17983

. 
. // mean of overall school score
. mean testscore

Mean estimation                     Number of obs    =     872

--------------------------------------------------------------
             |       Mean   Std. Err.     [95% Conf. Interval]
-------------+------------------------------------------------
   testscore |   511.1055   1.852679      507.4693    514.7417
--------------------------------------------------------------

. 
. 
. // get right-ish estimate of standard error of school test mean
. gen wscore = testscore * weight         // (w_hij * y_hij)

. gen fpc_r = $cut / nclgrade             // fpc rate by strata (grade)

. collapse (sum) wscore (first) nstgrade fpc_r, by(grade classid) // sum w/n class

. preserve

. collapse (mean) stmscore = wscore, by(grade) // mean weighted score w/n grades

. tempfile stratmeans                          // init temporary file

. save `stratmeans'                            // save temporary file
file /var/folders/h_/wc0n_t2j437g61hxg5t3sbdw1bjh2n/T//S_04332.000004 saved

. restore

. merge m:1 grade using `stratmeans', nogen    // merge grade means into file

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                40  
    -----------------------------------------

. 
. // (1 - f_h) * (n_h / (n_h - 1)) * (y_hi - ybar_h)^2
. gen adjsqdiff = (1 - fpc_r) * ($cut / ($cut - 1)) * (wscore - stmscore)^2 

. collapse (sum) adjsqdiff                // double sum: w/n strata, overall

. 
. // var(Ybar) = var(total) / stupop^2; Ybar_sem = sd(var(Ybar)) / sqrt(sampstu)
. scalar Ybar_school_sem = sqrt(adjsqdiff / Mhat^2) / sqrt(m)

. 
. scalar list Ybar_school Ybar_school_sem
Ybar_school =  510.17983
Ybar_school_sem =  .33002674

. 
. // end file     
. log close
      name:  <unnamed>
       log:  /Users/doylewr/practicum/fall_2016/central/lessons/sampling/sampling_part1.lo
> g
  log type:  text
 closed on:  11 Oct 2016, 11:29:12
------------------------------------------------------------------------------------------
